# name: Terraform Apply (manual)

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
#     inputs:
#       environment:
#         description: 'Select the environment (e.g., stg, prd)'
#         required: true
#         type: choice
#         options:
#           - stg
#           - prd
#         default: stg

# permissions:
#   contents: read
#   pull-requests: write

# jobs:
#   pre-plan:
#     name: Pre-Plan
#     runs-on: ubuntu-latest
#     # needs: check_terraform_dirs
#     if: github.event_name != 'workflow_dispatch'
#     strategy:
#       fail-fast: false
#       matrix:
#         dir: ["workloads"]
#         env: [stg, prd]

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           ref: ${{ github.base_ref }}

#       - name: Setup AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: "ap-northeast-1"

#       - name: Get Terraform version
#         id: terraform-version
#         uses: bigwheel/get-terraform-version-action@v1.2.0
#         with:
#           path: ${{ matrix.dir }}

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: ${{ steps.terraform-version.outputs.terraform-version }}

#       # Cache Terraform plugins
#       - name: Cache Terraform plugin directory
#         uses: actions/cache@v3
#         with:
#           path: .terraform
#           key: terraform-plugin-${{ runner.os }}-${{ hashFiles('**/*.tf*') }}

#       # Run Terraform Init
#       - name: Terraform Init
#         run: |
#           terraform init -backend-config="envs/${{ matrix.env }}/backend.hcl"
#         working-directory: ${{ matrix.dir }}

#       # Run Terraform Plan
#       - name: Terraform Plan
#         run: |
#           terraform plan -var="env=${{ matrix.env }}"
#         working-directory: ${{ matrix.dir }}

#   apply:
#     name: Apply to specific env
#     runs-on: ubuntu-latest
#     # needs: check_terraform_dirs
#     if: github.event_name == 'workflow_dispatch'
#     strategy:
#       matrix:
#         dir: ["workloads"]
#         env: ["${{ github.event.inputs.environment }}"]

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           ref: ${{ github.ref_name }}

      # - name: Exit if not on main branch
      #   run: |
      #     if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
      #       echo "This workflow can only be run on the main branch. Exiting."
      #       exit 0
      #     fi

#       - name: Ensure Main is Up-to-Date
#         run: |
#           git fetch origin ${{ github.ref_name }}
#           git diff --quiet origin/${{ github.ref_name }} || (echo "Main has diverged. Please rebase your branch." && exit 1)

#       - name: Setup AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: "ap-northeast-1"

#       - name: Get Terraform version
#         id: terraform-version
#         uses: bigwheel/get-terraform-version-action@v1.2.0
#         with:
#           path: ${{ matrix.dir }}

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: ${{ steps.terraform-version.outputs.terraform-version }}

#       # Run Terraform Init
#       - name: Terraform Init - ${{ matrix.env }}
#         run: |
#           terraform init -backend-config="envs/${{ matrix.env }}/backend.hcl"
#         working-directory: ${{ matrix.dir }}

#       # Run Terraform Plan
#       - name: Terraform Plan
#         if: github.event_name == 'workflow_dispatch'
#         run: |
#           terraform plan -var="env=${{ matrix.env }}"
#           sleep 6
#         working-directory: ${{ matrix.dir }}

#       # Run Terraform Apply
#       - name: Terraform Apply - ${{ matrix.env }}
#         if: github.event_name == 'workflow_dispatch'
#         run: |
#           terraform apply -var="env=${{ matrix.env }}" -auto-approve
#         working-directory: ${{ matrix.dir }}
